{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "LightService",
            "id": "injectable-LightService-e642656ddac338780d804876a6589c37",
            "file": "src/app/articles/light.service.ts",
            "properties": [
                {
                    "name": "sharedNode",
                    "defaultValue": "{ light: true }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LightService {\n  sharedNode = { light: true };\n}\n",
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-d5d424ce9f41379fe0ebf13109193bcc",
            "file": "src/app/articles/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "../../page/document/document.component.scss",
                "./about.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: [\n    '../../page/document/document.component.scss',\n    './about.component.scss',\n  ],\n})\nexport class AboutComponent extends ThemeChangeComponent {\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'document--light' : 'document--dark';\n\n    return ['document', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".document {\n  padding: 10px;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n  width: 85%;\n  margin-top: 0;\n  margin-right: 2.5%;\n  margin-left: 2.5%;\n  padding: 5%;\n}\n\n.document--light {\n  color: #000;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n}\n\n.document--dark {\n  color: #fff;\n  box-shadow: 5px 10px 18px rgba(255, 255, 255, 0.25);\n  background-color: #000;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .document {\n    width: 80%;\n    margin-top: 0;\n    margin-right: 5%;\n    margin-left: 5%;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .document {\n    width: 72%;\n    margin-top: 0;\n    margin-right: 9%;\n    margin-left: 9%;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .document {\n    width: 66.7%;\n    margin-top: 0;\n    margin-right: 11.667%;\n    margin-left: 11.667%;\n  }\n}\n",
                    "styleUrl": "../../page/document/document.component.scss"
                },
                {
                    "data": "* {\n  position: relative;\n  z-index: 9998;\n}\n\n.document {\n  margin-top: 7.5%;\n}\n",
                    "styleUrl": "./about.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <h2 style=\"text-align: center\">About</h2>\n  <hr />\n  <p>\n    <b>Forzen<span>.</span>io</b> provides <em>Zenful</em> visual test-driven,\n    component-driven design systems, development processes, and web applications\n    using Angular (TBD React and Vue) and\n    <a href=\"https://storybook.js.org/\"></a>Storybook.js.\n    <br />\n    <br />\n    We strive to alleviate the ever prevalent angst of front-end engineering and\n    mitigate it through thorough research and full guides to\n    <a routerLink=\"/angularization\">Angularization</a> processes.\n  </p>\n  <br />\n  <br />\n  <p style=\"text-align: right\">— <a href=\"https://pjnalls.com\">@pjnalls</a></p>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-15619256fdae77f663bd7c06f327599f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "brand",
                    "defaultValue": "'O'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "light",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "navItems",
                    "defaultValue": "[\n    { name: '❓ About', route: '/about' },\n    { name: '📐 Angularization', route: '/angularization' },\n    { name: '✉ Contact', route: '/contact' },\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "defaultValue": "'get-great-at-ng-blog'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FontSize } from './px-footer/font-size/font-size.enum';\nimport { Fidelity } from './px-footer/quality/fidelity.enum';\nimport PageComponent from './page/page.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'get-great-at-ng-blog';\n  light = true;\n  brand = 'O';\n  fontSize = FontSize.Normal;\n  fidelity = Fidelity.Normal;\n  navItems = [\n    { name: '❓ About', route: '/about' },\n    { name: '📐 Angularization', route: '/angularization' },\n    { name: '✉ Contact', route: '/contact' },\n  ];\n\n  ngOnInit() {\n    history.pushState({ light: true }, '', '');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<page\n  [light]=\"light\"\n  [brand]=\"brand\"\n  [fontSize]=\"fontSize\"\n  [fidelity]=\"fidelity\"\n  [navItems]=\"navItems\"\n>\n</page>\n"
        },
        {
            "name": "BgImageComponent",
            "id": "component-BgImageComponent-3ab270920d4969a289ee7633ebf96f8b",
            "file": "src/app/bg-image/bg-image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bg-image",
            "styleUrls": [
                "./bg-image.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bg-image.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                },
                {
                    "name": "navItems",
                    "defaultValue": "[]",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bg-image',\n  templateUrl: './bg-image.component.html',\n  styleUrls: ['./bg-image.component.scss'],\n})\nexport class BgImageComponent {\n  @Input() light = false;\n  @Input() backgroundColor?: string;\n  @Input() navItems: string[] = [];\n\n  public get classes(): string[] {\n    const mode = this.light ? 'bg-image--light' : 'bg-image--dark';\n\n    return [mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".bg-image {\n  padding: 0;\n  margin: 0;\n  background-image: url(\"/assets/bg-image.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: 750% !important;\n  background-position: top center;\n  height: 100vh;\n  filter: opacity(18%);\n}\n\n.bg-image--light {\n  background-color: #fff;\n}\n.bg-image--dark {\n  background-color: #000;\n}\n\n.bg-image--light,\n.bg-image--dark {\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .bg-image {\n    background-size: 500% !important;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .bg-image {\n    background-size: 300% !important;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .bg-image {\n    background-size: 200% !important;\n  }\n}\n",
                    "styleUrl": "./bg-image.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <div class=\"bg-image\"></div>\n</div>\n"
        },
        {
            "name": "ContactComponent",
            "id": "component-ContactComponent-dda710b13e9af4a634d39fa258006915",
            "file": "src/app/articles/contact/contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contact",
            "styleUrls": [
                "../../page/document/document.component.scss",
                "./contact.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contact.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: [\n    '../../page/document/document.component.scss',\n    './contact.component.scss',\n  ],\n})\nexport class ContactComponent extends ThemeChangeComponent {\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'document--light' : 'document--dark';\n\n    return ['document', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".document {\n  padding: 10px;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n  width: 85%;\n  margin-top: 0;\n  margin-right: 2.5%;\n  margin-left: 2.5%;\n  padding: 5%;\n}\n\n.document--light {\n  color: #000;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n}\n\n.document--dark {\n  color: #fff;\n  box-shadow: 5px 10px 18px rgba(255, 255, 255, 0.25);\n  background-color: #000;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .document {\n    width: 80%;\n    margin-top: 0;\n    margin-right: 5%;\n    margin-left: 5%;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .document {\n    width: 72%;\n    margin-top: 0;\n    margin-right: 9%;\n    margin-left: 9%;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .document {\n    width: 66.7%;\n    margin-top: 0;\n    margin-right: 11.667%;\n    margin-left: 11.667%;\n  }\n}\n",
                    "styleUrl": "../../page/document/document.component.scss"
                },
                {
                    "data": "* {\n  position: relative;\n  z-index: 9998;\n}\n\n.document {\n  margin-top: 7.5%;\n}\n",
                    "styleUrl": "./contact.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <h2 style=\"text-align: center\">Contact</h2>\n  <br />\n  <p>\n    This website is currently maintained by\n    <a href=\"https://pjnalls.com\">pjnalls</a>.<br />\n    <br />\n    See all contributions to open source on\n    <a href=\"https://github.com/pjnalls\">GitHub (@pjnalls)</a>.<br />\n    <br />\n    Follow me on\n    <a href=\"https://twitter.com/pjnalls\">Twitter (@pjnalls)</a>.<br />\n    <br />\n    Be sure to give\n    <a href=\"https://github.com/pjnalls/Angularization\">Angularization</a> a ⭐\n    for us on GitHub if you find it useful.<br />\n    <br />\n  </p>\n  <p style=\"text-align: right\">— <a href=\"https://pjnalls.com\">@pjnalls</a></p>\n</div>\n"
        },
        {
            "name": "DemoTextComponent",
            "id": "component-DemoTextComponent-b651e2372a30aa3c6c020a380acb9f28",
            "file": "src/app/demo-text/demo-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-text",
            "styleUrls": [
                "./demo-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./demo-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 15
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { AboutComponent } from '../articles/about/about.component';\nimport { IndexComponent } from '../articles/angularization/index/index.component';\nimport { NvmComponent } from '../articles/angularization/nvm/nvm.component';\nimport { VsCodeComponent } from '../articles/angularization/vs-code/vs-code.component';\nimport { VtddAngularComponent } from '../articles/angularization/vtdd-angular/vtdd-angular.component';\nimport { ContactComponent } from '../articles/contact/contact.component';\n\n@Component({\n  selector: 'demo-text',\n  templateUrl: './demo-text.component.html',\n  styleUrls: ['./demo-text.component.scss'],\n})\nexport class DemoTextComponent {\n  @Input() light = false;\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'demo-text--light' : 'demo-text--dark';\n\n    return [mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1,\nh2,\nh3,\nh4,\np {\n  color: #000 !important;\n}\n\n* {\n  width: 99%;\n  margin: 0;\n}\n",
                    "styleUrl": "./demo-text.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 18
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <br />\n  <br />\n  <h1 style=\"text-align: center\">Lo-Fi Mode</h1>\n  <br />\n  <br />\n  <hr />\n  <app-about></app-about>\n  <app-index></app-index>\n  <app-nvm></app-nvm>\n  <app-vs-code></app-vs-code>\n  <app-vtdd-angular></app-vtdd-angular>\n  <app-contact></app-contact>\n</div>\n"
        },
        {
            "name": "DocumentComponent",
            "id": "component-DocumentComponent-1cca722635ccc25b3ac362bf18cd3718",
            "file": "src/app/page/document/document.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document",
            "styleUrls": [
                "./document.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./document.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FontSize } from 'src/app/px-footer/font-size/font-size.enum';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss'],\n})\nexport class DocumentComponent extends ThemeChangeComponent {\n  constructor() {\n    super();\n  }\n\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'document--light' : 'document--dark';\n\n    return ['document', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".document {\n  padding: 10px;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n  width: 85%;\n  margin-top: 0;\n  margin-right: 2.5%;\n  margin-left: 2.5%;\n  padding: 5%;\n}\n\n.document--light {\n  color: #000;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n}\n\n.document--dark {\n  color: #fff;\n  box-shadow: 5px 10px 18px rgba(255, 255, 255, 0.25);\n  background-color: #000;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .document {\n    width: 80%;\n    margin-top: 0;\n    margin-right: 5%;\n    margin-left: 5%;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .document {\n    width: 72%;\n    margin-top: 0;\n    margin-right: 9%;\n    margin-left: 9%;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .document {\n    width: 66.7%;\n    margin-top: 0;\n    margin-right: 11.667%;\n    margin-left: 11.667%;\n  }\n}\n",
                    "styleUrl": "./document.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 17
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <br />\n  <br />\n</div>\n"
        },
        {
            "name": "FontSizeComponent",
            "id": "component-FontSizeComponent-4fd428fbfe013e2aa4c2da8ab0a54793",
            "file": "src/app/px-footer/font-size/font-size.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "font-size",
            "styleUrls": [
                "./font-size.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./font-size.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onFontSizeSelection",
                    "defaultValue": "new EventEmitter<FontSize>()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "selectFontSize",
                    "args": [
                        {
                            "name": "s",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\nimport { FontSize } from './font-size.enum';\n\n@Component({\n  selector: 'font-size',\n  templateUrl: './font-size.component.html',\n  styleUrls: ['./font-size.component.scss'],\n})\nexport class FontSizeComponent extends ThemeChangeComponent {\n  constructor() {\n    super();\n  }\n\n  @Output() onFontSizeSelection = new EventEmitter<FontSize>();\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'font-size--light' : 'font-size--dark';\n\n    return ['font-size', mode];\n  }\n\n  selectFontSize(s: FontSize) {\n    this.fontSize = s;\n    this.onFontSizeSelection.emit(this.fontSize);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".font-size {\n  font-weight: 700;\n  width: 90px;\n  margin: 0;\n  margin-top: 0;\n  text-align: center;\n  cursor: pointer;\n}\n\nspan:hover {\n  opacity: 0.667;\n}\n\n.medium-a,\n.large-a {\n  padding-left: 7.5px;\n}\n\n.small-a {\n  font-size: medium;\n}\n.medium-a {\n  font-size: x-large;\n}\n.large-a {\n  font-size: xx-large;\n}\n\n.font-size--light {\n  color: #000;\n  background-color: #fff;\n}\n.font-size--dark {\n  color: #fff;\n  background-color: #000;\n}\n\n.selected-a--light {\n  color: #fff !important;\n  -webkit-text-stroke: 1.5px #000;\n}\n.selected-a--dark {\n  color: #000 !important;\n  -webkit-text-stroke: 1.5px #fff;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .font-size {\n    margin-top: 0;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .font-size {\n    margin-top: 2px;\n    margin-right: 0;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .font-size {\n    margin-top: 5px;\n    margin-right: -10px;\n  }\n}\n",
                    "styleUrl": "./font-size.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 18
                    }
                }
            },
            "templateData": "<p\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <span\n    [ngClass]=\"{\n      'small-a': true,\n      'selected-a--light': fontSize === -1 && light,\n      'selected-a--dark': fontSize === -1 && !light\n    }\"\n    (click)=\"selectFontSize(-1)\"\n    >A</span\n  ><span\n    [ngClass]=\"{\n      'medium-a': true,\n      'selected-a--light': fontSize === 0 && light,\n      'selected-a--dark': fontSize === 0 && !light\n    }\"\n    (click)=\"selectFontSize(0)\"\n    >A</span\n  ><span\n    [ngClass]=\"{\n      'large-a': true,\n      'selected-a--light': fontSize === 1 && light,\n      'selected-a--dark': fontSize === 1 && !light\n    }\"\n    (click)=\"selectFontSize(1)\"\n    >A</span\n  >\n</p>\n"
        },
        {
            "name": "GetGreatComponent",
            "id": "component-GetGreatComponent-9d247a8e9633300c3376669613fee809",
            "file": "src/app/articles/get-great/get-great.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-get-great",
            "styleUrls": [
                "./get-great.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./get-great.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-get-great',\n  templateUrl: './get-great.component.html',\n  styleUrls: ['./get-great.component.scss'],\n})\nexport class GetGreatComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./get-great.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>get-great works!</p>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-25706238b21e4ff8bf066ea4e035f30d",
            "file": "src/app/articles/home/home.component.ts",
            "changeDetection": "ChangeDetectionStrategy.Default",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class HomeComponent extends ThemeChangeComponent implements OnInit {\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'home--light' : 'home--dark';\n\n    return ['home'];\n  }\n\n  ngOnInit() {\n    this.light = history.state.data ? history.state.data.light : true;\n    console.log(history.state.data);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  position: relative;\n  z-index: 9998;\n  text-align: center;\n}\n\n.home {\n  margin-top: 5vh;\n  line-height: 10vh;\n}\n\n.get-started-button {\n  border: 0;\n  padding-left: 50px;\n  padding-right: 50px;\n  height: 60px;\n  line-height: 60px;\n  padding-top: 0;\n  padding-bottom: 0;\n  border-radius: 6px;\n  font-size: 24px;\n  background-color: #000;\n  color: #fff;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.get-started-button:hover {\n  opacity: 0.667;\n  text-decoration: 0;\n}\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 20
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <br />\n  <h1 [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    Get Angularized.<br />\n    Don't try to do everything.<br />\n    Write <em>haiku</em>-like code.<br />\n  </h1>\n  <br />\n  <button\n    [ngClass]=\"{\n      'get-started-button': true,\n      'get-started-button--light': !light,\n      'get-started-button--dark': light\n    }\"\n    routerLink=\"/angularization\"\n  >\n    Get Started\n  </button>\n  <br />\n  <br />\n  <br />\n  <p style=\"text-align: center; font-weight: 500\">\n    Designed and developed by\n    <a href=\"https://github.com/pjnalls/Angularization\">@pjnalls</a>\n  </p>\n</div>\n"
        },
        {
            "name": "IndexComponent",
            "id": "component-IndexComponent-2b99a5734d95c311d2164d063629afd1",
            "file": "src/app/articles/angularization/index/index.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-index",
            "styleUrls": [
                "../../../page/document/document.component.scss",
                "./index.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./index.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: [\n    '../../../page/document/document.component.scss',\n    './index.component.scss',\n  ],\n})\nexport class IndexComponent extends ThemeChangeComponent implements OnInit {\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'document--light' : 'document--dark';\n\n    return ['document', mode];\n  }\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".document {\n  padding: 10px;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n  width: 85%;\n  margin-top: 0;\n  margin-right: 2.5%;\n  margin-left: 2.5%;\n  padding: 5%;\n}\n\n.document--light {\n  color: #000;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n}\n\n.document--dark {\n  color: #fff;\n  box-shadow: 5px 10px 18px rgba(255, 255, 255, 0.25);\n  background-color: #000;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .document {\n    width: 80%;\n    margin-top: 0;\n    margin-right: 5%;\n    margin-left: 5%;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .document {\n    width: 72%;\n    margin-top: 0;\n    margin-right: 9%;\n    margin-left: 9%;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .document {\n    width: 66.7%;\n    margin-top: 0;\n    margin-right: 11.667%;\n    margin-left: 11.667%;\n  }\n}\n",
                    "styleUrl": "../../../page/document/document.component.scss"
                },
                {
                    "data": "* {\n  position: relative;\n  z-index: 9998;\n}\n\n.document {\n  margin-top: 7.5%;\n}\n",
                    "styleUrl": "./index.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 16
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <h2 style=\"text-align: center\">Angularization</h2>\n  <hr />\n  <p>\n    Are you ready to get Angularized 📐?<br />\n    <br />\n    Angularization is a thoroughly-documented guide for visual test-driven,\n    component-driven Angular and Storybook development-process maintained on\n    <a href=\"https://github.com/pjnalls/Angularization\">GitHub</a>.<br />\n    <br />\n    Below are some articles to help you get started:\n  </p>\n\n  <ul>\n    <li>\n      <a routerLink=\"/angularization/nvm\">\"<em>NVM</em> not NPM\"</a>\n    </li>\n    <li>\n      <a routerLink=\"/angularization/vscode\" aria-disabled=\"true\"\n        >Visual Studio Code (Writing-in-Progress)</a\n      >\n    </li>\n    <li>\n      <a routerLink=\"/angularization/vtdd\" aria-disabled=\"true\"\n        >Visual TDD with Angular and Storybook (Writing-in-Progress)\n      </a>\n    </li>\n  </ul>\n\n  <p>\n    Please note that the documenation is currently still being written but you\n    can check the living guide on\n    <a href=\"https://github.com/pjnalls/Angularization\"\n      >the Angularization GitHub repository</a\n    >\n  </p>\n  <br />\n  <br />\n  <p style=\"text-align: right\">— <a href=\"https://pjnalls.com\">@pjnalls</a></p>\n</div>\n"
        },
        {
            "name": "LoFiComponent",
            "id": "component-LoFiComponent-ce92a4531ff2128c4f26b523e19fc971",
            "file": "src/app/lo-fi/lo-fi.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lo-fi",
            "styleUrls": [
                "./lo-fi.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lo-fi.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DemoTextComponent } from '../demo-text/demo-text.component';\nimport { AboutComponent } from '../articles/about/about.component';\n\n@Component({\n  selector: 'lo-fi',\n  templateUrl: './lo-fi.component.html',\n  styleUrls: ['./lo-fi.component.scss'],\n})\nexport class LoFiComponent {\n  @Input() light = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lo-fi.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div ngDefaultControl [ngModel]=\"light\">\n  <app-about [light]=\"light\"></app-about>\n</div>\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-dcb6626e77c2122116a03d73e303ddff",
            "file": "src/app/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "brand",
                    "defaultValue": "''",
                    "line": 12
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 11
                },
                {
                    "name": "navItems",
                    "defaultValue": "[{ name: '', route: '' }]",
                    "line": 14
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { NavItemComponent } from './nav-item/nav-item.component';\nimport { NavBrandComponent } from './nav-brand/nav-brand.component';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  @Input() light = false;\n  @Input() brand = '';\n  @Input() backgroundColor?: string;\n  @Input() navItems = [{ name: '', route: '' }];\n\n  public get classes(): string[] {\n    const mode = this.light ? 'navbar--light' : 'navbar--dark';\n\n    return ['navbar', mode];\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".navbar-container {\n  width: 100%;\n  left: 0;\n  top: 0;\n  position: fixed;\n  z-index: 9999;\n}\n\n.navbar {\n  display: inline-block;\n  height: 45px;\n  margin: 0;\n}\n\n.navbar--light,\n.nav-item--light {\n  color: #000;\n  background-color: #fff;\n  border-bottom: 2px solid #000;\n}\n\n.navbar--dark,\n.nav-item--dark {\n  color: #fff;\n  background-color: #000;\n  border-bottom: 2px solid #fff;\n}\n\nul,\nul li {\n  padding-left: 7.5px;\n  margin: 0;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .navbar {\n    height: 45px;\n  }\n  ul,\n  ul li {\n    padding-left: 22px;\n    margin: 0;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .navbar {\n    height: 50px;\n  }\n  ul,\n  ul li {\n    padding-left: 40px;\n    margin: 0;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .navbar {\n    height: 60px;\n  }\n  ul,\n  ul li {\n    padding-left: 52px;\n    margin: 0;\n  }\n}\n",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 16
                    }
                }
            },
            "templateData": "<div\n  class=\"navbar-container\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"brand\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n  ngDefaultControl\n  [ngModel]=\"navItems\"\n>\n  <div style=\"float: left\">\n    <nav-brand\n      [label]=\"brand\"\n      [light]=\"light\"\n      [ngClass]=\"classes\"\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\n    >\n    </nav-brand>\n  </div>\n  <div>\n    <nav-item\n      *ngFor=\"let item of navItems\"\n      [ngClass]=\"classes\"\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\n      [label]=\"item.name\"\n      [route]=\"item.route\"\n      [light]=\"light\"\n      [ngClass]=\"classes\"\n    >\n    </nav-item>\n  </div>\n</div>\n"
        },
        {
            "name": "NavBrandComponent",
            "id": "component-NavBrandComponent-0c7e7c7a7ee154a7bc84259828d899cc",
            "file": "src/app/navbar/nav-brand/nav-brand.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav-brand",
            "styleUrls": [
                "./nav-brand.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-brand.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'nav-brand',\n  templateUrl: './nav-brand.component.html',\n  styleUrls: ['./nav-brand.component.scss'],\n})\nexport class NavBrandComponent {\n  @Input() light = false;\n  @Input() backgroundColor?: string;\n  @Input() label = '';\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.light ? 'nav-brand--light' : 'nav-brand--dark';\n\n    return ['nav-brand', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-brand {\n  float: left;\n  font-size: 25px;\n  padding-top: 5px;\n  padding-left: 10px;\n  padding-right: 2.5px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: 700;\n  margin: 0;\n  padding-bottom: 0;\n  font-weight: 900;\n  text-decoration: underline;\n}\n.nav-brand--light {\n  color: crimson;\n  background-color: #fff;\n}\n.nav-brand--dark {\n  color: #fff;\n  background-color: #000;\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .nav-brand {\n    font-size: 30px;\n    padding-top: 2px;\n    padding-left: 15px;\n    padding-right: 5px;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .nav-brand {\n    font-size: 40px;\n    padding-top: 0;\n    padding-left: 20px;\n    padding-right: 5px;\n  }\n}\n",
                    "styleUrl": "./nav-brand.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<a\n  (click)=\"onClick.emit($event)\"\n  routerLink=\"/\"\n  [state]=\"{ data: { light: light } }\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"label\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  {{ label }}\n</a>\n"
        },
        {
            "name": "NavItemComponent",
            "id": "component-NavItemComponent-a4fb6a9f2fd4f02bb1f8eb6d7be0b78b",
            "file": "src/app/navbar/nav-item/nav-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav-item",
            "styleUrls": [
                "./nav-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                },
                {
                    "name": "route",
                    "defaultValue": "''",
                    "line": 12
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'nav-item',\n  templateUrl: './nav-item.component.html',\n  styleUrls: ['./nav-item.component.scss'],\n})\nexport class NavItemComponent {\n  @Input() light = false;\n  @Input() backgroundColor?: string;\n  @Input() label = '';\n  @Input() route = '';\n\n  public get classes(): string[] {\n    const mode = this.light ? 'nav-item--light' : 'nav-item--dark';\n\n    return ['nav-item', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-item {\n  font-weight: 500;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 45px;\n  padding-left: 0;\n  padding-right: 0;\n  margin-left: 7.5px;\n  font-size: 12px;\n  opacity: 1;\n}\n\n.nav-item--light {\n  color: #000;\n  background-color: #fff;\n}\n\n.nav-item--dark {\n  color: #fff;\n  background-color: #000;\n}\n\n.nav-item:hover {\n  opacity: 0.667;\n}\n\n/* Large-Size */\n@media (min-width: 414px) {\n  .nav-item {\n    margin-left: 20px;\n    font-size: 15px;\n    padding-left: 5px;\n    padding-right: 5px;\n    line-height: 45px;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .nav-item {\n    margin-left: 90px;\n    font-size: 18px;\n    padding-left: 5px;\n    padding-right: 5px;\n    line-height: 50px;\n  }\n}\n\n/* Full-Size */\n@media (min-width: 1112px) {\n  .nav-item {\n    margin-left: 120px;\n    font-size: 24px;\n    padding-left: 10px;\n    padding-right: 10px;\n    line-height: 60px;\n  }\n}\n",
                    "styleUrl": "./nav-item.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 14
                    }
                }
            },
            "templateData": "<a\n  routerLink=\"{{ route }}\"\n  [state]=\"{ data: { light: light } }\"\n  routerLinkActive=\"active-route\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"label\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n  ngDefaultControl\n  [ngModel]=\"route\"\n>\n  {{ label }}\n</a>\n"
        },
        {
            "name": "NvmComponent",
            "id": "component-NvmComponent-952491a26be27e3fa4b8433a37599980",
            "file": "src/app/articles/angularization/nvm/nvm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nvm",
            "styleUrls": [
                "../../../page/document/document.component.scss",
                "./nvm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nvm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'app-nvm',\n  templateUrl: './nvm.component.html',\n  styleUrls: [\n    '../../../page/document/document.component.scss',\n    './nvm.component.scss',\n  ],\n})\nexport class NvmComponent extends ThemeChangeComponent {\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'document--light' : 'document--dark';\n\n    return ['document', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".document {\n  padding: 10px;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n  width: 85%;\n  margin-top: 0;\n  margin-right: 2.5%;\n  margin-left: 2.5%;\n  padding: 5%;\n}\n\n.document--light {\n  color: #000;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n}\n\n.document--dark {\n  color: #fff;\n  box-shadow: 5px 10px 18px rgba(255, 255, 255, 0.25);\n  background-color: #000;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .document {\n    width: 80%;\n    margin-top: 0;\n    margin-right: 5%;\n    margin-left: 5%;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .document {\n    width: 72%;\n    margin-top: 0;\n    margin-right: 9%;\n    margin-left: 9%;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .document {\n    width: 66.7%;\n    margin-top: 0;\n    margin-right: 11.667%;\n    margin-left: 11.667%;\n  }\n}\n",
                    "styleUrl": "../../../page/document/document.component.scss"
                },
                {
                    "data": "* {\n  position: relative;\n  z-index: 9998;\n}\n\n.document {\n  margin-top: 7.5%;\n}\n",
                    "styleUrl": "./nvm.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <h2>\"<em>NVM</em> not NPM\" ❓</h2>\n  <hr />\n  <h3>What is an \"NVM\"?</h3>\n  <p>\n    NVM stands for\n    <strong><em>N</em>ode <em>V</em>ersion <em>M</em>anager</strong>.\n    Essentially, it is a system utility for installing, using, and managing\n    multiple versions of Node.js.\n  </p>\n  <p>\n    Below is a NVM-Windows example when using a Bash (Git Bash, more\n    specifically) shell:\n  </p>\n\n  <div class=\"samp\">\n    <samp>\n      <br />\n      $ nvm list<br />\n      <br />\n      &nbsp;&nbsp;&nbsp;&nbsp;15.8.0<br />\n      &nbsp;&nbsp;* 14.15.5 (Currently using 64-bit executable)<br />\n      <br />\n      $ node -v<br />\n      v14.15.5<br />\n      <br />\n      $ nvm use 15.8.0<br />\n      Now using node v15.8.0 (64-bit)<br />\n      <br />\n      $ node -v<br />\n      v15.8.0<br />\n      <br />\n      $<br />\n      <br />\n    </samp>\n  </div>\n\n  <p>\n    As you can see above, we're able to switch versions of\n    <code>node</code> with a simple <code>nvm use</code> command.\n  </p>\n\n  <h3>Why an NVM?</h3>\n  <p>\n    you work on multiple Node.js projects at any point, simultaneously or\n    sequentially, it would behoove you not to have more than one version of\n    Node.js on your machine — especially if you maintain any number of legacy\n    and modern applications at an enterprise.\n  </p>\n\n  <p>\n    Let's put this in perspective: at the time of writing this sub-section of\n    Angularization (February 15, 2021), Node.js was initially released 11+ years\n    ago (May 27, 2009) — soon to be 12 years ago. Since that time, there's been\n    500+ versions released for Node.js.\n  </p>\n\n  <p>\n    Therefore, invest some time into researching and using a reliable type of\n    NVM, since at some point — if not now or in the past — you'll most likely\n    need it as Node.js development progresses.\n  </p>\n\n  <p>\n    I'll be using NVM-Windows, but you can check the \"NVM Alternatives\"\n    sub-section for other popular NVM projects.\n  </p>\n\n  <h3>How to Install NVM</h3>\n  <p>\n    As mentioned in the previous sub-section, I and another developer used\n    NVM-Windows for our Node version manager during our initial Angular 11+\n    session, and I have been using it since Summer 2016 (if I remember\n    correctly).\n  </p>\n\n  <p>\n    Needless to say, I haven't had any troubles with it on a Windows machine.\n  </p>\n\n  <p>\n    Follow the set of instructions in the \"Installation & Upgrades\" sections in\n    the README found here on GitHub.\n  </p>\n  <p>\n    WARNING: Make sure you read the PREREQUISITE part for uninstalling existing\n    Node.js & NPM installations.\n  </p>\n  <p>\n    Also be sure to read the second paragraph about global module conflicts and\n    backing up any global npmrc configurations.\n  </p>\n  <p>...</p>\n  <p>Done? Okay... now — time to put nvm to use.</p>\n\n  <h3>How to Use NVM</h3>\n  <p>\n    NVMs' commands vary due to different implementations so check your preferred\n    NVM's documentation for details.\n  </p>\n  <p>\n    For NVM-Windows, refer to the\n    https://github.com/coreybutler/nvm-windows#usage page and section full\n    description of all the commands.\n  </p>\n\n  <p style=\"text-align: right\">— <a href=\"https://pjnalls.com\">@pjnalls</a></p>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-6ac147dd75a714d06d3dac0dd05175a7",
            "file": "src/app/page/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "LightService"
                }
            ],
            "selector": "page",
            "styleUrls": [
                "./page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "brand",
                    "defaultValue": "''",
                    "line": 24
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 25,
                    "type": "Fidelity"
                },
                {
                    "name": "navItems",
                    "defaultValue": "[{ name: '', route: '' }]",
                    "line": 27
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "router",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { NavbarComponent } from 'src/app/navbar/navbar.component';\nimport { PxFooterComponent } from 'src/app/px-footer/px-footer.component';\nimport { BgImageComponent } from 'src/app/bg-image/bg-image.component';\nimport { FontSizeComponent } from 'src/app/px-footer/font-size/font-size.component';\nimport { QualityComponent } from 'src/app/px-footer/quality/quality.component';\nimport { ThemeButtonComponent } from 'src/app/px-footer/theme-button/theme-button.component';\nimport { DemoTextComponent } from 'src/app/demo-text/demo-text.component';\nimport { FontSize } from 'src/app/px-footer/font-size/font-size.enum';\nimport { Fidelity } from 'src/app/px-footer/quality/fidelity.enum';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\nimport { LoFiComponent } from 'src/app/lo-fi/lo-fi.component';\nimport { DocumentComponent } from 'src/app/page/document/document.component';\nimport { LightService } from '../articles/light.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'page',\n  templateUrl: './page.component.html',\n  providers: [LightService],\n  styleUrls: ['./page.component.scss'],\n})\nexport default class PageComponent extends ThemeChangeComponent {\n  @Input() brand = '';\n  @Input() fidelity: Fidelity = Fidelity.Normal;\n  @Input() backgroundColor?: string;\n  @Input() navItems = [{ name: '', route: '' }];\n\n  public get classes(): string[] {\n    const mode = this.light ? 'page--light' : 'page--dark';\n\n    return ['page', mode];\n  }\n\n  constructor(public router: Router) {\n    super();\n  }\n\n  changeTheme(light: boolean) {\n    this.light = light;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nroute-outlet,\ndemo-text {\n  position: relative;\n  z-index: 9998;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 29
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"{\n    'small-size': fontSize === -1,\n    'normal-size': fontSize === 0,\n    'large-size': fontSize === 1,\n    light: light,\n    dark: !light\n  }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n  ngDefaultControl\n  [ngModel]=\"brand\"\n  ngDefaultControl\n  [ngModel]=\"fontSize\"\n  ngDefaultControl\n  [ngModel]=\"fidelity\"\n  ngDefaultControl\n  [ngModel]=\"navItems\"\n>\n  <navbar\n    [brand]=\"brand\"\n    [light]=\"light\"\n    [navItems]=\"navItems\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n  </navbar>\n  <div *ngIf=\"show; then thenBlock; else elseBlock\"></div>\n  <ng-template #thenBlock>\n    <bg-image\n      [light]=\"light\"\n      [ngClass]=\"classes\"\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\n      #thenBlock\n    >\n    </bg-image>\n    <br />\n    <br />\n    <br />\n    <router-outlet> </router-outlet>\n    <br />\n    <br />\n    <br />\n  </ng-template>\n  <ng-template #elseBlock>\n    <br />\n    <br />\n    <br />\n    <demo-text [light]=\"light\"></demo-text>\n    <!-- TODO: seperate compsite component from article content \n      <lo-fi [light]=\"light\"></lo-fi>\n    -->\n    <br />\n    <br />\n    <br />\n  </ng-template>\n\n  <px-footer\n    (onThemeChange)=\"changeTheme($event)\"\n    (onFontSizeChange)=\"changeFontSize($event)\"\n    (onFidelityChange)=\"changeFidelity($event)\"\n    [light]=\"light\"\n    [fontSize]=\"fontSize\"\n    [fidelity]=\"fidelity\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n  </px-footer>\n</div>\n"
        },
        {
            "name": "PxFooterComponent",
            "id": "component-PxFooterComponent-83eaac2f92b27d715dc7ada0beb5f7c3",
            "file": "src/app/px-footer/px-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "px-footer",
            "styleUrls": [
                "./px-footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./px-footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 24,
                    "type": "Fidelity"
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 25,
                    "type": "FontSize"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 23
                }
            ],
            "outputsClass": [
                {
                    "name": "onFidelityChange",
                    "defaultValue": "new EventEmitter<Fidelity>()",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFontSizeChange",
                    "defaultValue": "new EventEmitter<FontSize>()",
                    "line": 29,
                    "type": "EventEmitter"
                },
                {
                    "name": "onThemeChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "s",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "code",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "toggleTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { FontSizeComponent } from './font-size/font-size.component';\nimport { QualityComponent } from './quality/quality.component';\nimport { ThemeButtonComponent } from './theme-button/theme-button.component';\nimport { Router } from '@angular/router';\nimport { FontSize } from './font-size/font-size.enum';\nimport { Fidelity } from './quality/fidelity.enum';\n\n@Component({\n  selector: 'px-footer',\n  templateUrl: './px-footer.component.html',\n  styleUrls: ['./px-footer.component.scss'],\n})\nexport class PxFooterComponent {\n  constructor(private router: Router) {}\n\n  @Input() light = false;\n  @Input() fidelity: Fidelity = Fidelity.Normal;\n  @Input() fontSize: FontSize = FontSize.Normal;\n  @Input() backgroundColor?: string;\n\n  @Output() onThemeChange = new EventEmitter<boolean>();\n  @Output() onFontSizeChange = new EventEmitter<FontSize>();\n  @Output() onFidelityChange = new EventEmitter<Fidelity>();\n\n  public get classes(): string[] {\n    const mode = this.light ? 'footer--light' : 'footer--dark';\n\n    return ['footer', mode];\n  }\n\n  changeFontSize(s: FontSize) {\n    this.fontSize = s;\n    this.onFontSizeChange.emit(this.fontSize);\n  }\n\n  changeFidelity(fi: Fidelity) {\n    this.fidelity = fi;\n    this.onFidelityChange.emit(this.fidelity);\n  }\n\n  toggleTheme() {\n    this.light = !this.light;\n    this.onThemeChange.emit(this.light);\n  }\n\n  static code() {\n    const file = new File([], '../app/px-footer/px-footer.component.ts');\n    return new Promise(() => file.text()).then((words) => words);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".footer-container {\n  width: 100%;\n  left: 0;\n  bottom: 0;\n  position: fixed;\n  z-index: 9999;\n}\n\n.footer {\n  display: inline-block;\n  height: 45px;\n  margin: 0;\n}\n\ndiv div * {\n  border-top: 0 !important;\n}\n\n.footer--light,\n.nav-item--light {\n  color: #000;\n  background-color: #fff;\n  border-top: 2px solid #000;\n}\n\n.footer--dark,\n.nav-item--dark {\n  color: #fff;\n  background-color: #000;\n  border-top: 2px solid #fff;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .footer {\n    height: 45px;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .footer {\n    height: 50px;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .footer {\n    height: 60px;\n  }\n}\n",
                    "styleUrl": "./px-footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 32
                    }
                }
            },
            "templateData": "<div\n  class=\"footer-container\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n  ngDefaultControl\n  [ngModel]=\"fontSize\"\n  ngDefaultControl\n  [ngModel]=\"fidelity\"\n>\n  <div style=\"float: left; width: 33%\">\n    <font-size\n      (onFontSizeSelection)=\"changeFontSize($event)\"\n      [fontSize]=\"fontSize\"\n      [light]=\"light\"\n      [ngClass]=\"classes\"\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\n    >\n    </font-size>\n  </div>\n  <div style=\"float: left; width: 33%; text-align: center\">\n    <quality\n      (onFidelitySelection)=\"changeFidelity($event)\"\n      [fidelity]=\"fidelity\"\n      [light]=\"light\"\n      [ngClass]=\"classes\"\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\n    >\n    </quality>\n  </div>\n  <div style=\"float: left; width: 33%; text-align: right\">\n    <theme-button\n      (click)=\"toggleTheme()\"\n      [light]=\"light\"\n      [ngClass]=\"classes\"\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\n    >\n    </theme-button>\n  </div>\n</div>\n"
        },
        {
            "name": "QualityComponent",
            "id": "component-QualityComponent-0b015f6be8dfc43e0e58cd1194848d7e",
            "file": "src/app/px-footer/quality/quality.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quality",
            "styleUrls": [
                "./quality.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./quality.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onFidelitySelection",
                    "defaultValue": "new EventEmitter<Fidelity>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "selectFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\nimport { Fidelity } from './fidelity.enum';\n\n@Component({\n  selector: 'quality',\n  templateUrl: './quality.component.html',\n  styleUrls: ['./quality.component.scss'],\n})\nexport class QualityComponent extends ThemeChangeComponent {\n  @Input() backgroundColor?: string;\n\n  @Output() onFidelitySelection = new EventEmitter<Fidelity>();\n\n  public get classes(): string[] {\n    const mode = this.light ? 'quality--light' : 'quality--dark';\n\n    return ['quality', mode];\n  }\n\n  selectFidelity(fi: Fidelity) {\n    this.fidelity = fi;\n    this.onFidelitySelection.emit(this.fidelity);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".quality {\n  font-weight: 700;\n  width: 90px;\n  height: 45px;\n  line-height: 45px;\n  margin: 0;\n  margin-top: 0;\n  padding-top: 0;\n  padding-bottom: 10px;\n  padding-left: 10%;\n  text-align: center;\n  cursor: pointer;\n  font-size: 45px;\n}\n\nspan:hover {\n  opacity: 0.667;\n}\n\n.normal-dash,\n.high-dash {\n  padding-left: 10px;\n}\n\n.quality--light {\n  color: #000;\n  background-color: #fff;\n}\n.quality--dark {\n  color: #fff;\n  background-color: #000;\n}\n\n.selected-dash--light {\n  color: #fff !important;\n  -webkit-text-stroke: 1.5px #000;\n}\n.selected-dash--dark {\n  color: #000 !important;\n  -webkit-text-stroke: 1.5px #fff;\n}\n",
                    "styleUrl": "./quality.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<p\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <span\n    [ngClass]=\"{\n      'selected-dash--light': fidelity === -1 && light,\n      'selected-dash--dark': fidelity === -1 && !light\n    }\"\n    (click)=\"selectFidelity(-1)\"\n    >•</span\n  ><span\n    [ngClass]=\"{\n      'normal-dash': true,\n      'selected-dash--light': fidelity === 0 && light,\n      'selected-dash--dark': fidelity === 0 && !light\n    }\"\n    (click)=\"selectFidelity(0)\"\n    >•</span\n  ><span\n    [ngClass]=\"{\n      'high-dash': true,\n      'selected-dash--light': fidelity === 1 && light,\n      'selected-dash--dark': fidelity === 1 && !light\n    }\"\n    (click)=\"selectFidelity(1)\"\n    >•</span\n  >\n</p>\n"
        },
        {
            "name": "ThemeButtonComponent",
            "id": "component-ThemeButtonComponent-5ced0afb0c2502493d1e980a148ac76f",
            "file": "src/app/px-footer/theme-button/theme-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "theme-button",
            "styleUrls": [
                "./theme-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./theme-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'theme-button',\n  templateUrl: './theme-button.component.html',\n  styleUrls: ['./theme-button.component.scss'],\n})\nexport class ThemeButtonComponent {\n  @Input() light = false;\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'theme-button--light' : 'theme-button--dark';\n\n    return ['theme-button', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".theme-button {\n  border: 0;\n  margin-top: 12.5px;\n  margin-right: 7.5px;\n  padding: 5px 10px 5px 10px;\n  border-radius: 6px;\n  font-size: 10px;\n  background-color: #fff;\n  width: 45px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  opacity: 0.667;\n}\n\n.theme-button--light {\n  background-color: #000;\n}\n.theme-button--dark {\n  background-color: #fff;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .theme-button {\n    font-size: 12px;\n    width: 49px;\n    margin-top: 10px;\n    margin-right: 0;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .theme-button {\n    font-size: 15px;\n    width: 54px;\n    margin-top: 11px;\n    margin-right: 0;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .theme-button {\n    font-size: 18px;\n    width: 60px;\n    margin-top: 14px;\n    margin-right: -10px;\n  }\n}\n",
                    "styleUrl": "./theme-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            },
            "templateData": "<button\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  {{ light ? \"🔆\" : \"🌙\" }}\n</button>\n"
        },
        {
            "name": "ThemeChangeComponent",
            "id": "component-ThemeChangeComponent-40c6aad931421cb44f25605c4e8446b8",
            "file": "src/app/theme-change/theme-change.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity"
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FontSize } from '../px-footer/font-size/font-size.enum';\nimport { Fidelity } from '../px-footer/quality/fidelity.enum';\n\n@Component({\n  template: '',\n})\nexport class ThemeChangeComponent {\n  constructor() {\n    this.show =\n      this.fidelity === Fidelity.Normal || this.fidelity === Fidelity.High;\n  }\n\n  @Input() light = false;\n  @Input() fontSize: FontSize = FontSize.Normal;\n  @Input() fidelity: Fidelity = Fidelity.Normal;\n  show: boolean;\n\n  changeTheme(light: boolean) {\n    this.light = light;\n  }\n  changeFontSize(size: FontSize) {\n    this.fontSize = size;\n  }\n  changeFidelity(fi: Fidelity) {\n    this.fidelity = fi;\n    this.show =\n      this.fidelity === Fidelity.Normal || this.fidelity === Fidelity.High;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            }
        },
        {
            "name": "VsCodeComponent",
            "id": "component-VsCodeComponent-c37dbd27416911a2a4687e54f6a05f64",
            "file": "src/app/articles/angularization/vs-code/vs-code.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vs-code",
            "styleUrls": [
                "../../../page/document/document.component.scss",
                "./vs-code.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vs-code.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'app-vs-code',\n  templateUrl: './vs-code.component.html',\n  styleUrls: [\n    '../../../page/document/document.component.scss',\n    './vs-code.component.scss',\n  ],\n})\nexport class VsCodeComponent extends ThemeChangeComponent {\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'document--light' : 'document--dark';\n\n    return ['document', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".document {\n  padding: 10px;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n  width: 85%;\n  margin-top: 0;\n  margin-right: 2.5%;\n  margin-left: 2.5%;\n  padding: 5%;\n}\n\n.document--light {\n  color: #000;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n}\n\n.document--dark {\n  color: #fff;\n  box-shadow: 5px 10px 18px rgba(255, 255, 255, 0.25);\n  background-color: #000;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .document {\n    width: 80%;\n    margin-top: 0;\n    margin-right: 5%;\n    margin-left: 5%;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .document {\n    width: 72%;\n    margin-top: 0;\n    margin-right: 9%;\n    margin-left: 9%;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .document {\n    width: 66.7%;\n    margin-top: 0;\n    margin-right: 11.667%;\n    margin-left: 11.667%;\n  }\n}\n",
                    "styleUrl": "../../../page/document/document.component.scss"
                },
                {
                    "data": "* {\n  position: relative;\n  z-index: 9998;\n}\n\n.document {\n  margin-top: 7.5%;\n}\n",
                    "styleUrl": "./vs-code.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <h2 style=\"text-align: center\">\n    Visual Studio Code <br />\n    (Writing-in-Progress)\n  </h2>\n</div>\n"
        },
        {
            "name": "VtddAngularComponent",
            "id": "component-VtddAngularComponent-b94af183cf6080d95ee93c88792a089d",
            "file": "src/app/articles/angularization/vtdd-angular/vtdd-angular.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vtdd-angular",
            "styleUrls": [
                "../../../page/document/document.component.scss",
                "./vtdd-angular.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./vtdd-angular.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 16,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 15,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\n\n@Component({\n  selector: 'app-vtdd-angular',\n  templateUrl: './vtdd-angular.component.html',\n  styleUrls: [\n    '../../../page/document/document.component.scss',\n    './vtdd-angular.component.scss',\n  ],\n})\nexport class VtddAngularComponent extends ThemeChangeComponent {\n  @Input() backgroundColor?: string;\n\n  public get classes(): string[] {\n    const mode = this.light ? 'document--light' : 'document--dark';\n\n    return ['document', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".document {\n  padding: 10px;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n  width: 85%;\n  margin-top: 0;\n  margin-right: 2.5%;\n  margin-left: 2.5%;\n  padding: 5%;\n}\n\n.document--light {\n  color: #000;\n  box-shadow: 5px 10px 18px rgba(0, 0, 0, 0.25);\n  background-color: #fff;\n}\n\n.document--dark {\n  color: #fff;\n  box-shadow: 5px 10px 18px rgba(255, 255, 255, 0.25);\n  background-color: #000;\n}\n\n/* Large Mobile */\n@media (min-width: 414px) {\n  .document {\n    width: 80%;\n    margin-top: 0;\n    margin-right: 5%;\n    margin-left: 5%;\n  }\n}\n\n/* Tablet */\n@media (min-width: 834px) {\n  .document {\n    width: 72%;\n    margin-top: 0;\n    margin-right: 9%;\n    margin-left: 9%;\n  }\n}\n\n/* Full */\n@media (min-width: 1112px) {\n  .document {\n    width: 66.7%;\n    margin-top: 0;\n    margin-right: 11.667%;\n    margin-left: 11.667%;\n  }\n}\n",
                    "styleUrl": "../../../page/document/document.component.scss"
                },
                {
                    "data": "* {\n  position: relative;\n  z-index: 9998;\n}\n\n.document {\n  margin-top: 7.5%;\n}\n",
                    "styleUrl": "./vtdd-angular.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<div\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  ngDefaultControl\n  [ngModel]=\"light\"\n>\n  <h2 style=\"text-align: center\">\n    Visual TDD with Angular and Storybook <br />(Writing-in-Progress)\n  </h2>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BgImageComponent"
                        },
                        {
                            "name": "ContactComponent"
                        },
                        {
                            "name": "DemoTextComponent"
                        },
                        {
                            "name": "DocumentComponent"
                        },
                        {
                            "name": "FontSizeComponent"
                        },
                        {
                            "name": "GetGreatComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "IndexComponent"
                        },
                        {
                            "name": "LoFiComponent"
                        },
                        {
                            "name": "NavBrandComponent"
                        },
                        {
                            "name": "NavItemComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "NvmComponent"
                        },
                        {
                            "name": "PageComponent"
                        },
                        {
                            "name": "PxFooterComponent"
                        },
                        {
                            "name": "QualityComponent"
                        },
                        {
                            "name": "ThemeButtonComponent"
                        },
                        {
                            "name": "VsCodeComponent"
                        },
                        {
                            "name": "VtddAngularComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/App.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BgImage.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FontSize.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavBrand.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PxFooter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Quality.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ThemeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/App.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BgImage.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FontSize.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavBrand.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PxFooter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Quality.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ThemeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "navItemsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/App.stories.ts",
                "type": "[]",
                "defaultValue": "[\n  { name: '❓ About', route: '/about' },\n  { name: '📐 Angularization', route: '/angularization' },\n  { name: '✉ Contact', route: '/contact' },\n]"
            },
            {
                "name": "navItemsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "[]",
                "defaultValue": "[\n  { name: '❓ About', route: '/about' },\n  { name: '📐 Angularization', route: '/angularization' },\n  { name: '✉ Contact', route: '/contact' },\n]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/App.stories.ts",
                "type": "Story<AppComponent>",
                "defaultValue": "(args: AppComponent) => ({\n  component: AppComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BgImage.stories.ts",
                "type": "Story<BgImageComponent>",
                "defaultValue": "(args: BgImageComponent) => ({\n  component: BgImageComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FontSize.stories.ts",
                "type": "Story<FontSizeComponent>",
                "defaultValue": "(args: FontSizeComponent) => ({\n  component: FontSizeComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "Story<NavbarComponent>",
                "defaultValue": "(args: NavbarComponent) => ({\n  component: NavbarComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavBrand.stories.ts",
                "type": "Story<NavBrandComponent>",
                "defaultValue": "(args: NavBrandComponent) => ({\n  component: NavBrandComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavItem.stories.ts",
                "type": "Story<NavItemComponent>",
                "defaultValue": "(args: NavItemComponent) => ({\n  component: NavItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PxFooter.stories.ts",
                "type": "Story<PxFooterComponent>",
                "defaultValue": "(args: PxFooterComponent) => ({\n  component: PxFooterComponent,\n  props: args,\n  parameters: {\n    storySource: {\n      source: `\n      // px-footer.component.ts\n\n      ${PxFooterComponent.code()}\n`,\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Quality.stories.ts",
                "type": "Story<QualityComponent>",
                "defaultValue": "(args: QualityComponent) => ({\n  component: QualityComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Quality.stories.ts",
                "type": "Story<QualityComponent>",
                "defaultValue": "(args: QualityComponent) => ({\r\n  component: QualityComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ThemeButton.stories.ts",
                "type": "Story<ThemeButtonComponent>",
                "defaultValue": "(args: ThemeButtonComponent) => ({\n  component: ThemeButtonComponent,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "Fidelity",
                "childs": [
                    {
                        "name": "Low"
                    },
                    {
                        "name": "Normal",
                        "value": "0"
                    },
                    {
                        "name": "High",
                        "value": "1"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/px-footer/quality/fidelity.enum.ts"
            },
            {
                "name": "FontSize",
                "childs": [
                    {
                        "name": "Small"
                    },
                    {
                        "name": "Normal",
                        "value": "0"
                    },
                    {
                        "name": "Large",
                        "value": "1"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/px-footer/font-size/font-size.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/App.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/App.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/App.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "navItemsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/App.stories.ts",
                    "type": "[]",
                    "defaultValue": "[\n  { name: '❓ About', route: '/about' },\n  { name: '📐 Angularization', route: '/angularization' },\n  { name: '✉ Contact', route: '/contact' },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/App.stories.ts",
                    "type": "Story<AppComponent>",
                    "defaultValue": "(args: AppComponent) => ({\n  component: AppComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/BgImage.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BgImage.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BgImage.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BgImage.stories.ts",
                    "type": "Story<BgImageComponent>",
                    "defaultValue": "(args: BgImageComponent) => ({\n  component: BgImageComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/FontSize.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FontSize.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FontSize.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FontSize.stories.ts",
                    "type": "Story<FontSizeComponent>",
                    "defaultValue": "(args: FontSizeComponent) => ({\n  component: FontSizeComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Navbar.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "navItemsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "[]",
                    "defaultValue": "[\n  { name: '❓ About', route: '/about' },\n  { name: '📐 Angularization', route: '/angularization' },\n  { name: '✉ Contact', route: '/contact' },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "Story<NavbarComponent>",
                    "defaultValue": "(args: NavbarComponent) => ({\n  component: NavbarComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/NavBrand.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "Story<NavBrandComponent>",
                    "defaultValue": "(args: NavBrandComponent) => ({\n  component: NavBrandComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/NavBrand.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavItem.stories.ts",
                    "type": "Story<NavItemComponent>",
                    "defaultValue": "(args: NavItemComponent) => ({\n  component: NavItemComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/PxFooter.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PxFooter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PxFooter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PxFooter.stories.ts",
                    "type": "Story<PxFooterComponent>",
                    "defaultValue": "(args: PxFooterComponent) => ({\n  component: PxFooterComponent,\n  props: args,\n  parameters: {\n    storySource: {\n      source: `\n      // px-footer.component.ts\n\n      ${PxFooterComponent.code()}\n`,\n    },\n  },\n})"
                }
            ],
            "src/stories/Quality.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "Story<QualityComponent>",
                    "defaultValue": "(args: QualityComponent) => ({\n  component: QualityComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Quality.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "Story<QualityComponent>",
                    "defaultValue": "(args: QualityComponent) => ({\r\n  component: QualityComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/ThemeButton.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ThemeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ThemeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ThemeButton.stories.ts",
                    "type": "Story<ThemeButtonComponent>",
                    "defaultValue": "(args: ThemeButtonComponent) => ({\n  component: ThemeButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/px-footer/quality/fidelity.enum.ts": [
                {
                    "name": "Fidelity",
                    "childs": [
                        {
                            "name": "Low"
                        },
                        {
                            "name": "Normal",
                            "value": "0"
                        },
                        {
                            "name": "High",
                            "value": "1"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/px-footer/quality/fidelity.enum.ts"
                }
            ],
            "src/app/px-footer/font-size/font-size.enum.ts": [
                {
                    "name": "FontSize",
                    "childs": [
                        {
                            "name": "Small"
                        },
                        {
                            "name": "Normal",
                            "value": "0"
                        },
                        {
                            "name": "Large",
                            "value": "1"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/px-footer/font-size/font-size.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/",
                        "pathMatch": "full"
                    },
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "about",
                        "component": "AboutComponent"
                    },
                    {
                        "path": "angularization",
                        "component": "IndexComponent"
                    },
                    {
                        "path": "angularization/nvm",
                        "component": "NvmComponent"
                    },
                    {
                        "path": "angularization/vscode",
                        "component": "VsCodeComponent"
                    },
                    {
                        "path": "angularization/vtdd",
                        "component": "VtddAngularComponent"
                    },
                    {
                        "path": "contact",
                        "component": "ContactComponent"
                    },
                    {
                        "path": "**",
                        "redirectTo": "/",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/angularization/index/index.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IndexComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/angularization/nvm/nvm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NvmComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/angularization/vs-code/vs-code.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VsCodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/angularization/vtdd-angular/vtdd-angular.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VtddAngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/contact/contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/get-great/get-great.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GetGreatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/articles/light.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LightService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/bg-image/bg-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BgImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/demo-text/demo-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DemoTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/lo-fi/lo-fi.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoFiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/nav-brand/nav-brand.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavBrandComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/nav-item/nav-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/page/document/document.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/page/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/font-size/font-size.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FontSizeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/px-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PxFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/quality/quality.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QualityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/theme-button/theme-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/theme-change/theme-change.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeChangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/App.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/App.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/App.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navItemsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/App.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BgImage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BgImage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BgImage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FontSize.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FontSize.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FontSize.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavBrand.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavBrand.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavBrand.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navItemsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PxFooter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PxFooter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PxFooter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Quality.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Quality.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Quality.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ThemeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ThemeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ThemeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}