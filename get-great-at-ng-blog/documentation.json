{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-e3ea1f4631d62652a5623d3ab757b2fc",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  async navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl);\r\n  }\r\n\r\n  async getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText();\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ThemeChangeComponent",
            "id": "class-ThemeChangeComponent-da26b3830594994b9f5ebdf1242e231c",
            "file": "src/app/theme-change/theme-change.component.ts",
            "type": "class",
            "sourceCode": "import { Input } from '@angular/core';\r\nimport { FontSize } from '../px-footer/font-size/font-size.enum';\r\nimport { Fidelity } from '../px-footer/quality/fidelity.enum';\r\n\r\nexport class ThemeChangeComponent {\r\n  constructor() { \r\n    this.show = this.fidelity === Fidelity.Normal || this.fidelity === Fidelity.High;\r\n  }\r\n\r\n  @Input() light = false;\r\n  @Input() fontSize: FontSize = FontSize.Normal;\r\n  @Input() fidelity: Fidelity = Fidelity.Normal;\r\n  show: boolean;\r\n\r\n  changeTheme(light: boolean) { this.light = light; }\r\n  changeFontSize(size: FontSize) { this.fontSize = size; }\r\n  changeFidelity(fi: Fidelity) { \r\n    this.fidelity = fi;\r\n    this.show = this.fidelity === Fidelity.Normal || this.fidelity === Fidelity.High; \r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 5
            },
            "properties": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 12,
                    "type": "Fidelity"
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 11,
                    "type": "FontSize"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2a8e245e3d98a5c4bb8d4bd1eb597b28",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'get-great-at-ng-blog'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'get-great-at-ng-blog';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "BgImageComponent",
            "id": "component-BgImageComponent-191b621a97c820151fb5a99eed3cad9e",
            "file": "src/app/bg-image/bg-image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bg-image",
            "styleUrls": [
                "./bg-image.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bg-image.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                },
                {
                    "name": "navItems",
                    "defaultValue": "[]",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bg-image',\r\n  templateUrl: './bg-image.component.html',\r\n  styleUrls: ['./bg-image.component.scss']\r\n})\r\nexport class BgImageComponent {\r\n  @Input() light = false;\r\n  @Input() backgroundColor?: string;\r\n  @Input() navItems: string[] = [];\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'bg-image--light' : 'bg-image--dark';\r\n\r\n    return [mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".bg-image {\r\n  padding: 0;\r\n  margin: 0;\r\n  background-image: url(\"../../assets/bg-image.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-size: 750% !important;\r\n  background-position: top center;\r\n  height: 100vh;\r\n  filter: opacity(18%);\r\n}\r\n\r\n.bg-image--light { background-color: #fff; }\r\n.bg-image--dark { background-color: #000; }\r\n\r\n.bg-image--light, .bg-image--dark {\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0; \r\n}\r\n\r\n/* Large Mobile */\r\n@media (min-width: 414px) { .bg-image { background-size: 500% !important; } }\r\n\r\n/* Tablet */\r\n@media (min-width: 834px) { .bg-image { background-size: 300% !important; } }\r\n\r\n/* Full */\r\n@media (min-width: 1112px) { .bg-image { background-size: 125% !important; } }",
                    "styleUrl": "./bg-image.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            },
            "templateData": "<div \r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n>\r\n  <div class=\"bg-image\"></div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-44f2f1e1b3a1e0ebc1e0edafd90d05c0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "DemoTextComponent",
            "id": "component-DemoTextComponent-ceef59f2623d91b65c2e6051a72897ba",
            "file": "src/app/demo-text/demo-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-text",
            "styleUrls": [
                "./demo-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./demo-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-text',\r\n  templateUrl: './demo-text.component.html',\r\n  styleUrls: ['./demo-text.component.scss']\r\n})\r\nexport class DemoTextComponent {\r\n  @Input() light = false;\r\n  @Input() backgroundColor?: string;\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'demo-text--light' : 'demo-text--dark';\r\n\r\n    return [mode];\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".demo-text--light { color: #000; }\r\n.demo-text--dark { color: #fff; }\r\n",
                    "styleUrl": "./demo-text.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            },
            "templateData": "<div\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n>\r\n  <h1 style=\"text-align: center;\">h1 Header Example</h1>\r\n  <hr>\r\n  <h2>This is an example of an h2 header</h2>\r\n  <h3>This is an example of an h3 header</h3>\r\n  <h4>This is an example of an h4 header</h4>\r\n  <h5>This is an example of an h5 header</h5>\r\n  <hr>\r\n  <p>This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.<br>\r\n    <br>\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n    This is an example of a paragraph. This is an example of a paragraph.\r\n  </p>\r\n</div>"
        },
        {
            "name": "FontSizeComponent",
            "id": "component-FontSizeComponent-3396cb40fda8323b6d5b384fb9916dfa",
            "file": "src/app/px-footer/font-size/font-size.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "font-size",
            "styleUrls": [
                "./font-size.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./font-size.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 12,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 11,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 10,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onFontSizeSelection",
                    "defaultValue": "new EventEmitter<FontSize>()",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "domElement",
                    "defaultValue": "document.querySelector('body') || this._elementRef.nativeElement.querySelector('body')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "selectFontSize",
                    "args": [
                        {
                            "name": "s",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\r\nimport { FontSize } from './font-size.enum';\r\n\r\n@Component({\r\n  selector: 'font-size',\r\n  templateUrl: './font-size.component.html',\r\n  styleUrls: ['./font-size.component.scss']\r\n})\r\nexport class FontSizeComponent extends ThemeChangeComponent {\r\n  constructor(private _elementRef : ElementRef) {\r\n    super();\r\n  }\r\n  \r\n  private domElement = document.querySelector('body') || this._elementRef.nativeElement.querySelector('body');\r\n\r\n  @Output() onFontSizeSelection = new EventEmitter<FontSize>();\r\n  @Input() backgroundColor?: string;\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'font-size--light' : 'font-size--dark';\r\n\r\n    return ['font-size', mode];\r\n  }\r\n\r\n  selectFontSize(s: FontSize) {\r\n    this.fontSize = s;\r\n    this.onFontSizeSelection.emit(this.fontSize);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".font-size { \r\n  font-weight: 700; \r\n  width: 90px;\r\n  margin: 0;\r\n  margin-top: 0;\r\n  text-align: center;\r\n  cursor: pointer; \r\n}\r\n\r\nspan:hover { opacity: 0.667; }\r\n\r\n.medium-a, .large-a { padding-left: 7.5px; }\r\n\r\n.small-a { font-size: medium; }\r\n.medium-a { font-size: x-large; }\r\n.large-a { font-size: xx-large; }\r\n\r\n.font-size--light { color: #000; background-color: #fff;}\r\n.font-size--dark { color: #fff; background-color: #000;}\r\n\r\n.selected-a--light { color: #fff !important; -webkit-text-stroke: 1.5px #000; }\r\n.selected-a--dark { color: #000 !important; -webkit-text-stroke: 1.5px #fff; }\r\n\r\n/* Large Mobile */\r\n@media (min-width: 414px) { \r\n  .font-size { \r\n    margin-top: 0;\r\n  } \r\n}\r\n\r\n/* Tablet */\r\n@media (min-width: 834px) { \r\n  .font-size { \r\n    margin-top: 2px;\r\n    margin-right: 0;\r\n  } \r\n}\r\n\r\n/* Full */\r\n@media (min-width: 1112px) { \r\n  .font-size { \r\n    margin-top: 5px;\r\n    margin-right: -10px;\r\n  } \r\n}",
                    "styleUrl": "./font-size.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_elementRef",
                        "type": "ElementRef"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 20
                    }
                }
            },
            "templateData": "<p\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"label\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n>\r\n  <span \r\n    [ngClass]=\"{ 'small-a': true, 'selected-a--light': fontSize === -1 && light, 'selected-a--dark': fontSize === -1 && !light }\"\r\n    (click)=\"selectFontSize(-1)\"\r\n  >A</span><span\r\n    [ngClass]=\"{ 'medium-a': true, 'selected-a--light': fontSize === 0 && light, 'selected-a--dark': fontSize === 0 && !light }\" \r\n    (click)=\"selectFontSize(0)\"\r\n  >A</span><span \r\n    [ngClass]=\"{ 'large-a': true, 'selected-a--light': fontSize === 1 && light, 'selected-a--dark': fontSize === 1 && !light }\"\r\n    (click)=\"selectFontSize(1)\"\r\n  >A</span>\r\n</p>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-c349aa42f2121da4b5737d60a50fa413",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LoFiComponent",
            "id": "component-LoFiComponent-401a48f59a41b9e5670cc36b55cc7888",
            "file": "src/app/lo-fi/lo-fi.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lo-fi",
            "styleUrls": [
                "./lo-fi.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lo-fi.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string",
                    "inheritance": {
                        "file": "DemoTextComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9,
                    "inheritance": {
                        "file": "DemoTextComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { DemoTextComponent } from '../demo-text/demo-text.component';\n\n@Component({\n  selector: 'app-lo-fi',\n  templateUrl: './lo-fi.component.html',\n  styleUrls: ['./lo-fi.component.scss']\n})\nexport class LoFiComponent extends DemoTextComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lo-fi.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "DemoTextComponent",
            "templateData": "\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-9318313e6468322c878a2797be2b222c",
            "file": "src/app/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "brand",
                    "defaultValue": "''",
                    "line": 12
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 11
                },
                {
                    "name": "navItems",
                    "defaultValue": "[]",
                    "line": 14,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { NavItemComponent } from './nav-item/nav-item.component';\r\nimport { NavBrandComponent } from './nav-brand/nav-brand.component';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Input() light = false;\r\n  @Input() brand = '';\r\n  @Input() backgroundColor?: string;\r\n  @Input() navItems: string[] = [];\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'navbar--light' : 'navbar--dark';\r\n\r\n    return ['navbar', mode];\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".navbar-container {\r\n  width: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  position: fixed;\r\n  z-index: 9999;\r\n}\r\n\r\n.navbar {\r\n  display: inline-block;\r\n  height: 45px;\r\n  list-style-type: none;\r\n  margin: 0;\r\n}\r\n\r\n.navbar--light, .nav-item--light {\r\n  color: #000;\r\n  background-color: #fff;\r\n  border-bottom: 2px solid #000;\r\n}\r\n\r\n.navbar--dark, .nav-item--dark {\r\n  color: #fff;\r\n  background-color: #000;\r\n  border-bottom: 2px solid #fff;\r\n}\r\n\r\nul, ul li { padding-left: 7.5px; margin: 0 }\r\n\r\n/* Large Mobile */\r\n@media (min-width: 414px) { \r\n  .navbar { height: 45px; }\r\n  ul, ul li { padding-left: 22px; margin: 0 } \r\n}\r\n\r\n/* Tablet */\r\n@media (min-width: 834px) { \r\n  .navbar { height: 50px; }\r\n  ul, ul li { padding-left: 40px; margin: 0 } \r\n}\r\n\r\n/* Full */\r\n@media (min-width: 1112px) { \r\n  .navbar { height: 60px; }\r\n  ul, ul li { padding-left: 52px; margin: 0 } \r\n}",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 16
                    }
                }
            },
            "templateData": "<div\r\n  class=\"navbar-container\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"brand\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n  ngDefaultControl [ngModel]=\"navItems\"\r\n>\r\n  <div style=\"float: left;\">\r\n    <nav-brand \r\n      [label]=\"brand\"\r\n      [light]=\"light\"\r\n      [ngClass]=\"classes\" \r\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n      >\r\n    </nav-brand>\r\n  </div>\r\n  <div>\r\n    <ul \r\n      *ngFor=\"let item of navItems\"\r\n      [ngClass]=\"classes\"\r\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n    >\r\n      <li>\r\n        <nav-item \r\n          [label]=\"item\"\r\n          [light]=\"light\" \r\n          [ngClass]=\"classes\" \r\n          [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n        </nav-item>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NavBrandComponent",
            "id": "component-NavBrandComponent-210fe85a947ba432837a1168d0586afe",
            "file": "src/app/navbar/nav-brand/nav-brand.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav-brand",
            "styleUrls": [
                "./nav-brand.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-brand.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nav-brand',\r\n  templateUrl: './nav-brand.component.html',\r\n  styleUrls: ['./nav-brand.component.scss']\r\n})\r\nexport class NavBrandComponent {\r\n  @Input() light = false;\r\n  @Input() backgroundColor?: string;\r\n  @Input() label = '';\r\n\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'nav-brand--light' : 'nav-brand--dark';\r\n\r\n    return ['nav-brand', mode];\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-brand {\r\n  float: left;\r\n  font-size: 25px;\r\n  padding-top: 8px;\r\n  padding-left: 10px;\r\n  padding-right: 2.5px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding-bottom: 0;\r\n}\r\n.nav-brand--light { color: crimson; background-color: #fff; }\r\n.nav-brand--dark { color: #fff; background-color: #000; }\r\n\r\n/* Tablet */\r\n@media (min-width: 834px) {\r\n  .nav-brand { \r\n    font-size: 30px;  \r\n    padding-top: 10px;\r\n    padding-left: 15px;\r\n    padding-right: 5px;\r\n  }\r\n}\r\n\r\n/* Full */\r\n@media (min-width: 1112px) {\r\n  .nav-brand { \r\n    font-size: 40px;\r\n    padding-top: 10px;\r\n    padding-left: 20px;\r\n    padding-right: 5px;\r\n  }\r\n}",
                    "styleUrl": "./nav-brand.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<a\r\n  (click)=\"onClick.emit($event)\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"label\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n>\r\n  {{ label }}\r\n</a>\r\n"
        },
        {
            "name": "NavItemComponent",
            "id": "component-NavItemComponent-3465cd9a936ff6eac02dce943eca4217",
            "file": "src/app/navbar/nav-item/nav-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nav-item",
            "styleUrls": [
                "./nav-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nav-item',\r\n  templateUrl: './nav-item.component.html',\r\n  styleUrls: ['./nav-item.component.scss']\r\n})\r\nexport class NavItemComponent {\r\n  @Input() light = false;\r\n  @Input() backgroundColor?: string;\r\n  @Input() label = '';\r\n\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'nav-item--light' : 'nav-item--dark';\r\n\r\n    return ['nav-item', mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-item {\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 45px;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  margin-left: 0;\r\n  font-size: 10px;\r\n  opacity: 1;\r\n}\r\n\r\n.nav-item--light {\r\n  color: #000;\r\n  background-color: #fff;\r\n}\r\n\r\n.nav-item--dark {\r\n  color: #fff;\r\n  background-color: #000;\r\n}\r\n\r\n.nav-item:hover {\r\n  opacity: 0.667;\r\n}\r\n\r\n/* Tablet */\r\n@media (min-width: 834px) { \r\n  .nav-item {\r\n    margin-left: 15px;\r\n    font-size: 12px;\r\n    padding-left: 5px;\r\n    padding-right: 5px; \r\n    line-height: 50px;\r\n  }\r\n}\r\n\r\n/* Full-Size */\r\n@media (min-width: 1112px) {\r\n  .nav-item {\r\n    margin-left: 60px;\r\n    font-size: 15px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;  \r\n    line-height: 60px;\r\n  }\r\n}",
                    "styleUrl": "./nav-item.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<a\r\n  (click)=\"onClick.emit($event)\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"label\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n>\r\n  {{ label }}\r\n</a>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-ea4e4f326477221a07100de7e8cd34b4",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "a-degree-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "templateUrl": [
                "./page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "brand",
                    "defaultValue": "''",
                    "line": 19
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 20,
                    "type": "Fidelity"
                },
                {
                    "name": "navItems",
                    "defaultValue": "[]",
                    "line": 22,
                    "type": "string[]"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 12,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 11,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 10,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NavbarComponent } from 'src/app/navbar/navbar.component';\r\nimport { PxFooterComponent } from 'src/app/px-footer/px-footer.component';\r\nimport { BgImageComponent } from 'src/app/bg-image/bg-image.component';\r\nimport { FontSizeComponent } from '../app/px-footer/font-size/font-size.component';\r\nimport { QualityComponent } from '../app/px-footer/quality/quality.component';\r\nimport { ThemeButtonComponent } from '../app/px-footer/theme-button/theme-button.component';\r\nimport { DemoTextComponent } from '../app/demo-text/demo-text.component';\r\nimport { FontSize } from '../app/px-footer/font-size/font-size.enum';\r\nimport { Fidelity } from '../app/px-footer/quality/fidelity.enum';\r\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\r\n\r\n@Component({\r\n  selector: 'a-degree-page',\r\n  templateUrl: './page.component.html',\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent extends ThemeChangeComponent {\r\n  @Input() brand = '';\r\n  @Input() fidelity: Fidelity = Fidelity.Normal;\r\n  @Input() backgroundColor?: string;\r\n  @Input() navItems: string[] = [];\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'page--light' : 'page--dark';\r\n\r\n    return ['page', mode];\r\n  }\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\ndemo-text {\r\n  position: relative;\r\n  z-index: 9998;\r\n}\r\n\r\nh2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\np {\r\n  margin: 1em 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 24
                    }
                }
            },
            "templateData": "<div [ngClass]=\"{'small-size': fontSize === -1, 'normal-size': fontSize === 0, 'large-size': fontSize === 1}\">\r\n  <navbar \r\n    [brand]=\"brand\"\r\n    [light]=\"light\"\r\n    [navItems]=\"navItems\"\r\n    [ngClass]=\"classes\" \r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n  </navbar>\r\n  <div *ngIf=\"show; else elseBlock\">\r\n    <bg-image\r\n      [light]=\"light\"\r\n      [ngClass]=\"classes\" \r\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n    >\r\n    </bg-image>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <demo-text [light]=\"light\"></demo-text>\r\n    <br>\r\n    <br>\r\n    <br>\r\n  </div>\r\n  <demo-text [light]=\"light\" #elseBlock></demo-text>\r\n  \r\n  <px-footer \r\n  (onThemeChange)=\"changeTheme($event)\"\r\n  (onFontSizeChange)=\"changeFontSize($event)\"\r\n  (onFidelityChange)=\"changeFidelity($event)\"\r\n  [light]=\"light\"\r\n  [fontSize]=\"fontSize\"\r\n  [fidelity]=\"fidelity\"\r\n  [ngClass]=\"classes\" \r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n>\r\n</px-footer>\r\n</div>\r\n\r\n"
        },
        {
            "name": "PxFooterComponent",
            "id": "component-PxFooterComponent-dc941673bb2225e34dee543a06ce781c",
            "file": "src/app/px-footer/px-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "px-footer",
            "styleUrls": [
                "./px-footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./px-footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 15,
                    "type": "Fidelity"
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 16,
                    "type": "FontSize"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 14
                }
            ],
            "outputsClass": [
                {
                    "name": "onFidelityChange",
                    "defaultValue": "new EventEmitter<Fidelity>()",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFontSizeChange",
                    "defaultValue": "new EventEmitter<FontSize>()",
                    "line": 20,
                    "type": "EventEmitter"
                },
                {
                    "name": "onThemeChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "s",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { FontSizeComponent } from './font-size/font-size.component';\r\nimport { QualityComponent } from './quality/quality.component';\r\nimport { ThemeButtonComponent } from './theme-button/theme-button.component';\r\nimport { FontSize } from './font-size/font-size.enum';\r\nimport { Fidelity } from './quality/fidelity.enum';\r\n\r\n@Component({\r\n  selector: 'px-footer',\r\n  templateUrl: './px-footer.component.html',\r\n  styleUrls: ['./px-footer.component.scss']\r\n})\r\nexport class PxFooterComponent {\r\n  @Input() light = false;\r\n  @Input() fidelity: Fidelity = Fidelity.Normal;\r\n  @Input() fontSize: FontSize = FontSize.Normal;\r\n  @Input() backgroundColor?: string;\r\n\r\n  @Output() onThemeChange = new EventEmitter<boolean>();\r\n  @Output() onFontSizeChange = new EventEmitter<FontSize>();\r\n  @Output() onFidelityChange = new EventEmitter<Fidelity>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'footer--light' : 'footer--dark';\r\n\r\n    return ['footer', mode];\r\n  }\r\n\r\n  changeFontSize(s: FontSize) { \r\n    this.fontSize = s;\r\n    this.onFontSizeChange.emit(this.fontSize);\r\n  }\r\n\r\n  changeFidelity(fi: Fidelity) {\r\n    this.fidelity = fi;\r\n    this.onFidelityChange.emit(this.fidelity);\r\n  }\r\n\r\n  toggleTheme() { \r\n    this.light = !this.light;\r\n    this.onThemeChange.emit(this.light);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".footer-container {\r\n  width: 100%;\r\n  left: 0;\r\n  bottom: 0;\r\n  position: fixed;\r\n  z-index: 9999;\r\n}\r\n\r\n.footer {\r\n  display: inline-block;\r\n  height: 45px;\r\n  margin: 0;\r\n}\r\n\r\ndiv div * { border-top: 0 !important; }\r\n\r\n.footer--light, .nav-item--light {\r\n  color: #000;\r\n  background-color: #fff;\r\n  border-top: 2px solid #000;\r\n}\r\n\r\n.footer--dark, .nav-item--dark {\r\n  color: #fff;\r\n  background-color: #000;\r\n  border-top: 2px solid #fff;\r\n}\r\n\r\n/* Large Mobile */\r\n@media (min-width: 414px) { .footer { height: 45px; } }\r\n\r\n/* Tablet */\r\n@media (min-width: 834px) { .footer { height: 50px; } }\r\n\r\n/* Full */\r\n@media (min-width: 1112px) { .footer { height: 60px; } }\r\n",
                    "styleUrl": "./px-footer.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 23
                    }
                }
            },
            "templateData": "<div\r\n  class=\"footer-container\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n  ngDefaultControl [ngModel]=\"fontSize\"\r\n  ngDefaultControl [ngModel]=\"fidelity\"\r\n>\r\n  <div style=\"float: left; width: 33%;\">\r\n    <font-size\r\n      (onFontSizeSelection)=\"changeFontSize($event)\"\r\n      [fontSize]=\"fontSize\"\r\n      [light]=\"light\"\r\n      [ngClass]=\"classes\" \r\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n      >\r\n    </font-size>\r\n  </div>\r\n  <div style=\"float: left; width: 33%; text-align: center;\">\r\n    <quality\r\n      (onFidelitySelection)=\"changeFidelity($event)\" \r\n      [fidelity]=\"fidelity\"\r\n      [light]=\"light\"\r\n      [ngClass]=\"classes\" \r\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n      >\r\n    </quality>\r\n  </div>\r\n  <div style=\"float: left; width: 33%; text-align: right;\">\r\n    <theme-button\r\n      (click)=\"toggleTheme()\"\r\n      [light]=\"light\" \r\n      [ngClass]=\"classes\" \r\n      [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n    </theme-button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "QualityComponent",
            "id": "component-QualityComponent-b0af4d9bec562e364468ff128189e61e",
            "file": "src/app/px-footer/quality/quality.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quality",
            "styleUrls": [
                "./quality.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./quality.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "fidelity",
                    "defaultValue": "Fidelity.Normal",
                    "line": 12,
                    "type": "Fidelity",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "fontSize",
                    "defaultValue": "FontSize.Normal",
                    "line": 11,
                    "type": "FontSize",
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 10,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onFidelitySelection",
                    "defaultValue": "new EventEmitter<Fidelity>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "show",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "selectFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFidelity",
                    "args": [
                        {
                            "name": "fi",
                            "type": "Fidelity"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "fi",
                            "type": "Fidelity",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeFontSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "FontSize"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "FontSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "light",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "light",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ThemeChangeComponent"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter  } from '@angular/core';\r\nimport { ThemeChangeComponent } from 'src/app/theme-change/theme-change.component';\r\nimport { Fidelity } from './fidelity.enum';\r\n\r\n@Component({\r\n  selector: 'quality',\r\n  templateUrl: './quality.component.html',\r\n  styleUrls: ['./quality.component.scss']\r\n})\r\nexport class QualityComponent extends ThemeChangeComponent {\r\n  @Input() backgroundColor?: string;\r\n\r\n  @Output() onFidelitySelection = new EventEmitter<Fidelity>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'quality--light' : 'quality--dark';\r\n\r\n    return ['quality', mode];\r\n  }\r\n\r\n  selectFidelity(fi: Fidelity) { \r\n    this.fidelity = fi \r\n    this.onFidelitySelection.emit(this.fidelity);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".quality { \r\n  font-weight: 700; \r\n  width: 90px;\r\n  height: 45px;\r\n  line-height: 45px;\r\n  margin: 0;\r\n  padding-left: 10%;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-size: 45px; \r\n}\r\n\r\nspan:hover { opacity: 0.667; }\r\n\r\n.normal-dash, .high-dash { padding-left: 10px; }\r\n\r\n.quality--light { color: #000; background-color: #fff;}\r\n.quality--dark { color: #fff; background-color: #000;}\r\n\r\n.selected-dash--light { color: #fff !important; -webkit-text-stroke: 1.5px #000; }\r\n.selected-dash--dark { color: #000 !important; -webkit-text-stroke: 1.5px #fff; }",
                    "styleUrl": "./quality.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ThemeChangeComponent",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<p\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"label\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n>\r\n  <span \r\n    [ngClass]=\"{ 'selected-dash--light': fidelity === -1 && light, 'selected-dash--dark': fidelity === -1 && !light }\"\r\n    (click)=\"selectFidelity(-1)\"\r\n  >•</span><span\r\n    [ngClass]=\"{ 'normal-dash': true, 'selected-dash--light': fidelity === 0 && light, 'selected-dash--dark': fidelity === 0 && !light }\" \r\n    (click)=\"selectFidelity(0)\"\r\n  >•</span><span \r\n    [ngClass]=\"{ 'high-dash': true, 'selected-dash--light': fidelity === 1 && light, 'selected-dash--dark': fidelity === 1 && !light }\"\r\n    (click)=\"selectFidelity(1)\"\r\n  >•</span>\r\n</p>\r\n"
        },
        {
            "name": "ThemeButtonComponent",
            "id": "component-ThemeButtonComponent-574eebfb8a9f8180483c2ecdfbe2f696",
            "file": "src/app/px-footer/theme-button/theme-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "theme-button",
            "styleUrls": [
                "./theme-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./theme-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "line": 9
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'theme-button',\r\n  templateUrl: './theme-button.component.html',\r\n  styleUrls: ['./theme-button.component.scss']\r\n})\r\nexport class ThemeButtonComponent {\r\n  @Input() light = false;\r\n  @Input() backgroundColor?: string;\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.light ? 'theme-button--light' : 'theme-button--dark';\r\n\r\n    return ['theme-button', mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".theme-button {\r\n  border: 0;\r\n  margin-top: 12.5px;\r\n  margin-right: 7.5px;\r\n  padding: 5px 10px 5px 10px;\r\n  border-radius: 6px;\r\n  font-size: 10px;\r\n  background-color: #fff;\r\n  width: 45px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover { opacity: 0.667; }\r\n\r\n.theme-button--light { background-color: #000; }\r\n.theme-button--dark { background-color: #fff; }\r\n\r\n/* Large Mobile */\r\n@media (min-width: 414px) { \r\n  .theme-button { \r\n    font-size: 12px; \r\n    width: 49px;\r\n    margin-top: 10px;\r\n    margin-right: 0;\r\n  } \r\n}\r\n\r\n/* Tablet */\r\n@media (min-width: 834px) { \r\n  .theme-button { \r\n    font-size: 15px; \r\n    width: 54px;\r\n    margin-top: 11px;\r\n    margin-right: 0;\r\n  } \r\n}\r\n\r\n/* Full */\r\n@media (min-width: 1112px) { \r\n  .theme-button { \r\n    font-size: 18px; \r\n    width: 60px;\r\n    margin-top: 14px;\r\n    margin-right: -10px;\r\n  } \r\n}",
                    "styleUrl": "./theme-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            },
            "templateData": "<button\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  ngDefaultControl [ngModel]=\"light\"\r\n>\r\n  {{ light ? '💡' : '🌙' }}\r\n</button>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BgImageComponent"
                        },
                        {
                            "name": "DemoTextComponent"
                        },
                        {
                            "name": "FontSizeComponent"
                        },
                        {
                            "name": "LoFiComponent"
                        },
                        {
                            "name": "NavBrandComponent"
                        },
                        {
                            "name": "NavItemComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "PxFooterComponent"
                        },
                        {
                            "name": "QualityComponent"
                        },
                        {
                            "name": "ThemeButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BgImage.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FontSize.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavBrand.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PxFooter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Quality.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ThemeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BgImage.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FontSize.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavBrand.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PxFooter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Quality.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ThemeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "navItemsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "[]",
                "defaultValue": "[ '❓ About', '📐 Angularization', '💪 Get Great' ]"
            },
            {
                "name": "navItemsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "[]",
                "defaultValue": "[ '❓ About', '📐 Angularization', '💪 Get Great' ]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/BgImage.stories.ts",
                "type": "Story<BgImageComponent>",
                "defaultValue": "(args: BgImageComponent) => ({\r\n  component: BgImageComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  component: Button,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FontSize.stories.ts",
                "type": "Story<FontSizeComponent>",
                "defaultValue": "(args: FontSizeComponent) => ({\r\n  component: FontSizeComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  component: Header,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavBrand.stories.ts",
                "type": "Story<NavBrandComponent>",
                "defaultValue": "(args: NavBrandComponent) => ({\r\n  component: NavBrandComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/NavItem.stories.ts",
                "type": "Story<NavItemComponent>",
                "defaultValue": "(args: NavItemComponent) => ({\r\n  component: NavItemComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Navbar.stories.ts",
                "type": "Story<NavbarComponent>",
                "defaultValue": "(args: NavbarComponent) => ({\r\n  component: NavbarComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/PxFooter.stories.ts",
                "type": "Story<PxFooterComponent>",
                "defaultValue": "(args: PxFooterComponent) => ({\r\n  component: PxFooterComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Quality.stories.ts",
                "type": "Story<QualityComponent>",
                "defaultValue": "(args: QualityComponent) => ({\r\n  component: QualityComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  component: Page,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ThemeButton.stories.ts",
                "type": "Story<ThemeButtonComponent>",
                "defaultValue": "(args: ThemeButtonComponent) => ({\r\n  component: ThemeButtonComponent,\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "Fidelity",
                "childs": [
                    {
                        "name": "Low"
                    },
                    {
                        "name": "Normal",
                        "value": "0"
                    },
                    {
                        "name": "High",
                        "value": "1"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/px-footer/quality/fidelity.enum.ts"
            },
            {
                "name": "FontSize",
                "childs": [
                    {
                        "name": "Small"
                    },
                    {
                        "name": "Normal",
                        "value": "0"
                    },
                    {
                        "name": "Large",
                        "value": "1"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/px-footer/font-size/font-size.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/BgImage.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BgImage.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BgImage.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/BgImage.stories.ts",
                    "type": "Story<BgImageComponent>",
                    "defaultValue": "(args: BgImageComponent) => ({\r\n  component: BgImageComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/FontSize.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FontSize.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FontSize.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FontSize.stories.ts",
                    "type": "Story<FontSizeComponent>",
                    "defaultValue": "(args: FontSizeComponent) => ({\r\n  component: FontSizeComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/NavBrand.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavBrand.stories.ts",
                    "type": "Story<NavBrandComponent>",
                    "defaultValue": "(args: NavBrandComponent) => ({\r\n  component: NavBrandComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/NavItem.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/NavItem.stories.ts",
                    "type": "Story<NavItemComponent>",
                    "defaultValue": "(args: NavItemComponent) => ({\r\n  component: NavItemComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Navbar.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "navItemsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "[]",
                    "defaultValue": "[ '❓ About', '📐 Angularization', '💪 Get Great' ]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Navbar.stories.ts",
                    "type": "Story<NavbarComponent>",
                    "defaultValue": "(args: NavbarComponent) => ({\r\n  component: NavbarComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/PxFooter.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PxFooter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PxFooter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/PxFooter.stories.ts",
                    "type": "Story<PxFooterComponent>",
                    "defaultValue": "(args: PxFooterComponent) => ({\r\n  component: PxFooterComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Quality.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Quality.stories.ts",
                    "type": "Story<QualityComponent>",
                    "defaultValue": "(args: QualityComponent) => ({\r\n  component: QualityComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "navItemsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "[]",
                    "defaultValue": "[ '❓ About', '📐 Angularization', '💪 Get Great' ]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  component: Page,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/ThemeButton.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ThemeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ThemeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ThemeButton.stories.ts",
                    "type": "Story<ThemeButtonComponent>",
                    "defaultValue": "(args: ThemeButtonComponent) => ({\r\n  component: ThemeButtonComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  component: Button,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  component: Header,\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/px-footer/quality/fidelity.enum.ts": [
                {
                    "name": "Fidelity",
                    "childs": [
                        {
                            "name": "Low"
                        },
                        {
                            "name": "Normal",
                            "value": "0"
                        },
                        {
                            "name": "High",
                            "value": "1"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/px-footer/quality/fidelity.enum.ts"
                }
            ],
            "src/app/px-footer/font-size/font-size.enum.ts": [
                {
                    "name": "FontSize",
                    "childs": [
                        {
                            "name": "Small"
                        },
                        {
                            "name": "Normal",
                            "value": "0"
                        },
                        {
                            "name": "Large",
                            "value": "1"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/px-footer/font-size/font-size.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/bg-image/bg-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BgImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/demo-text/demo-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DemoTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/lo-fi/lo-fi.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoFiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/nav-brand/nav-brand.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavBrandComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/nav-item/nav-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/font-size/font-size.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FontSizeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/px-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PxFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/quality/quality.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QualityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/px-footer/theme-button/theme-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/theme-change/theme-change.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ThemeChangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BgImage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BgImage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/BgImage.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FontSize.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FontSize.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FontSize.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavBrand.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavBrand.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavBrand.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/NavItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navItemsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navItemsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PxFooter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PxFooter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/PxFooter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Quality.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Quality.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Quality.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ThemeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ThemeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ThemeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}